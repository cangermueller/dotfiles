# Plugins
# https://github.com/tmux-plugins/tpm
# prefix-I: install plugins
# prefix-U: update plugins
# prefix-alt-U: remove unused plugins

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'thewtex/tmux-mem-cpu-load'

# Key bindings
unbind C-b
unbind l
set -g prefix C-s
bind-key C-s last-window

# Termial settings
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color:Tc"


# Enable copying to stystem clipboard
set -s set-clipboard on

# order sessions by time
# bind s choose-tree -Zs -O time

bind c new-window -c '#{pane_current_path}'
bind '"' split-window -c '#{pane_current_path}'
bind J split-window -c '#{pane_current_path}'
bind K split-window -b -c '#{pane_current_path}'
bind L split-window -h -c '#{pane_current_path}'
bind H split-window -h -b -c '#{pane_current_path}'
bind n previous-window
bind m next-window
bind p last-window
bind P last-pane
bind r rotate-window

bind S confirm-before -p "kill-session #S? (y/n)" kill-session
bind W confirm-before -p "kill-window #W? (y/n)" kill-window
bind X kill-pane

# bind X kill-pane
# bind W kill-window
# bind S kill-session

bind C send-keys "clear && tmux clear-history" \; send-keys "Enter"
bind O command-prompt 'new-session -s %%'
bind R source-file ~/.tmux.conf \; display "Config Reloaded!"
# bind W source-file ~/.tmux/sessions/default.conf
bind M command-prompt 'join-pane -t %%' # join window
bind N command-prompt 'move-window -t %%' # change window number
bind / copy-mode\; command-prompt -p "search up" "send -X search-backward '%%%'"

# Search for common patterns
bind + copy-mode \; send -X search-backward "stack trace"
bind _ copy-mode \; send -X search-backward "Workflow job execution statistics"

# Moving windows
bind , swap-window -t -1 \; previous-window
bind . swap-window -t +1 \; next-window

# Renaming
bind < command-prompt 'rename-session %%'
bind > command-prompt 'rename-window %%'

# Navigation
bind h select-pane -L
bind l select-pane -R
bind k select-pane -U
bind j select-pane -D

bind = select-layout even-vertical

## Smart pane switching with awareness of Vim splits.
## See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Resizing panesMore actions
bind -r Left resize-pane -L 5
bind -r Right resize-pane -R 5
bind -r Up resize-pane -U 5
bind -r Down resize-pane -D 5


# Usability
set -g history-limit 100000
set -g status-keys vi
set -g mode-keys vi
set-window-option -g mode-keys vi

## keep tmux msgs around longer
set -g display-time 3000
set -g repeat-time 300 # time to repeat commands without prefix key (def: 500)
set -g base-index 1

set -g mouse off


# Copy-mode
bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down
unbind-key -T copy-mode-vi Space     ;   bind-key -T copy-mode-vi v send-keys -X begin-selection
unbind-key -T copy-mode-vi Enter     ;   bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind-key -T copy-mode-vi C-v       ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
unbind-key -T copy-mode-vi [         ;   bind-key -T copy-mode-vi [ send-keys -X begin-selection
unbind-key -T copy-mode-vi ]         ;   bind-key -T copy-mode-vi ] send-keys -X copy-selection



# Theme
set -g monitor-activity on
set -g message-style bg=green,fg=black

# Status bar {
set -g status-bg black
set -g status-fg white
set -g status-justify centre
set -g status-bg black
set -g status-fg white
set -g status-left-length 80
set -g status-interval 2

# Nice colors
# * red: colour196
# * blue: colour33
# * green: colour28
# * yellow: yellow
# * purple: colour165


if-shell '[ "$is_local_host" -eq 1 ]' \
  'set -g status-left "#[fg=colour196,bold][#[fg=colour33] #H: #[fg=white]#S#[fg=colour196] ] [#[fg=colour196]"' \
  'set -g status-left "#[fg=colour196,bold][#[fg=colour28] #H: #[fg=white]#S#[fg=colour196] ] [#[fg=colour196]"'


set -g status-right "#[fg=colour196,bold]] [ #[fg=green]#(~/.tmux/plugins/tmux-mem-cpu-load/tmux-mem-cpu-load --colors -m 2 --interval 2) #[fg=yellow]%Y-%m-%d #[fg=cyan]%H:%M #[fg=colour196]] #[default]"
set -g status-right-length 100

# Windows
set-option -g allow-rename off # avoid weird window title
setw -g window-active-style 'bg=black' # bg color of active pane
setw -g window-style 'bg=colour234' # bg color of inactive pane(s)

# Windows status
setw -g window-status-style bg=black,fg=white
setw -g window-status-current-style bg=black,fg=colour196,bold

# Panes
set -g pane-border-style fg=colour238
set -g pane-active-border-style fg=colour196


# Source local settings
source -q ~/.tmux.conf.local


# # Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
